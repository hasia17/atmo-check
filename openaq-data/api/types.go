// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package api

import (
	"time"
)

// Coordinates defines model for Coordinates.
type Coordinates struct {
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
}

// Country defines model for Country.
type Country struct {
	Code *string `json:"code,omitempty"`
	Id   *int32  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// Measurement defines model for Measurement.
type Measurement struct {
	Coordinates *Coordinates         `json:"coordinates,omitempty"`
	Datetime    *MeasurementDateTime `json:"datetime,omitempty"`
	SensorId    *int32               `json:"sensorId,omitempty"`
	StationId   *int32               `json:"stationId,omitempty"`
	Timestamp   *time.Time           `json:"timestamp,omitempty"`
	Value       *float64             `json:"value,omitempty"`
}

// MeasurementDateTime defines model for MeasurementDateTime.
type MeasurementDateTime struct {
	Local *string `json:"local,omitempty"`
	Utc   *string `json:"utc,omitempty"`
}

// Parameter defines model for Parameter.
type Parameter struct {
	DisplayName *string `json:"displayName,omitempty"`
	Id          *int32  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Units       *string `json:"units,omitempty"`
}

// Station defines model for Station.
type Station struct {
	Coordinates *Coordinates `json:"coordinates,omitempty"`
	Country     *Country     `json:"country,omitempty"`
	Id          *int32       `json:"id,omitempty"`
	Locality    *string      `json:"locality,omitempty"`
	Name        *string      `json:"name,omitempty"`
	Parameters  *[]Parameter `json:"parameters,omitempty"`
	Timezone    *string      `json:"timezone,omitempty"`
}
